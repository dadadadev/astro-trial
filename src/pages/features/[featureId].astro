---
import Layout from "../../layouts/Layout.astro";
import { getFeatures, getFeatureDetail, Feature } from "../../library/microcms";

export const getStaticPaths = async() => {
  const response = await getFeatures({ fields: ["id"] });
  return response.contents.map((fearure: Feature) => ({
    params: {
      featureId: fearure.id,
    },
  }));
}

const { featureId } = Astro.params;
const {
    title,
    constraint,
    "input-fields": inputFields,
    others,
    publishedAt
} = await getFeatureDetail(featureId as string);
---

<Layout title="My first blog with Astro">
  <main>
    <h1 class="title">{title}</h1>
    <p class="publishedAt">公開日時：{publishedAt}</p>
    
    <h2>制約</h2>
    {constraint.map(c => (
      <div>
        <h3>{c["note-title"]}</h3>
        <div>{c["note-item"].map(note=> (
          <div>{note["generic-list-item"]}</div>
        ))}</div>
      </div>
    ))}

  <h2>入力項目</h2>
    <table>
      <thead>
        <tr>
          <th>項目名</th>
          <th>必須</th>
          <th>デフォルト値</th>
          <th>内容</th>
        </tr>
      </thead>
      <tbody>
        {inputFields.map(field => (
          <tr>
            <td>{field["input-field-title"]}</td>
            <td>{field["input-field-required"] ? '✓' : '-'}</td>
            <td>{field["input-field-default"]}</td>
            <td>{field["input-field-desc"]}</td>
          </tr>
        ))}
      </tbody>
    </table>

    {others.map(other => (
      <h2>{other["definition-title"]}</h2>
      <p>{other["definition-value"]}</p>
      <>{other["definition-images"].map(({url,width,height}) => (
        <img src={url} alt="" width={width} height={height}>
      ))}</>
    ))}    
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1em;
    max-width: 60ch;
  }
  th,td {
    border: solid 1px;
  }
  table {
    border-collapse:  collapse;
  }
  th {
    width:  300px;
    height: 80px;
  }
</style>
